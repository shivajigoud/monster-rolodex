{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","Search","type","placeholder","onChange","handleChange","App","state","searchTerm","fetch","then","response","json","data","d","users","console","log","setState","this","filterdMonsters","filter","RegExp","test","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,GCHE,I,kBDGK,SAACC,GAAD,OAChB,sBAAKC,UAAU,OAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAAKL,EAAMI,QAAQE,YEFXC,EAAW,SAACP,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SAA4BD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAAK,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,UCF/FK,G,MAAO,SAAAV,GAAK,OACrB,uBAAOW,KAAK,SACZC,YAAaZ,EAAMY,YACnBC,SAAUb,EAAMc,aAChBb,UAAU,iBC0DCc,E,kDAzDb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTV,KAAK,UACLE,SAAS,CACP,CAACF,KAAK,QAAQD,GAAG,GACjB,CAACC,KAAK,WAAWD,GAAG,GACpB,CAACC,KAAK,SAASD,GAAG,IAEpBY,WAAW,IATF,E,gEAYO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAEA,EAAKb,KAAI,SAAAc,GACnB,OAAOA,EAAElB,IACP,KAAK,EACLkB,EAAEjB,KAAO,kBACT,MACA,KAAK,EACLiB,EAAEjB,KAAO,qBACT,MACA,KAAK,EACLiB,EAAEjB,KAAO,mBAKX,OAAOiB,QAERJ,MAAK,SAAAK,GAAQC,QAAQC,IAAIF,GAAO,EAAKG,SAAS,CAACnB,SAASgB,S,+BAElD,IAAD,SACwBI,KAAKZ,MAA5BR,EADD,EACCA,SAASS,EADV,EACUA,WACVY,EAAkBrB,EAASsB,QAAO,SAAA1B,GAGtC,OADY,IAAI2B,OADF,MAAMd,EACW,MAClBe,KAAK5B,EAAQE,OAASF,KAGvC,OACE,sBAAKH,UAAU,MAAf,UACA,cAAC,EAAD,CAAQW,YAAY,kBAClBE,aAAc,SAAAmB,GACd,EAAKN,SAAS,CAACV,WAAWgB,EAAEC,OAAOC,QAAO,kBAAKV,QAAQC,IAAI,EAAKV,MAAMC,kBAGxE,cAAC,EAAD,CAAUT,SAAUqB,W,GAjDNO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.888f769a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.style.css';\r\n\r\nexport const Card = (props)=>(\r\n    <div className=\"card\">\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n     <h1>{props.monster.name}</h1>\r\n     </div>\r\n)\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return (<div className=\"card-list\">{props.monsters.map(monster => (<Card monster={monster} key={monster.id}></Card>))}</div>)\r\n}","import React from 'react';\r\nimport './search.style.css';\r\n\r\nexport const Search=props=>(\r\n    <input type=\"search\"\r\n    placeholder={props.placeholder}\r\n    onChange={props.handleChange} \r\n    className=\"search-box\"/>\r\n)","import React,{Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list.component';\nimport {Search} from './components/search/search.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      name:'shivaji',\n      monsters:[\n        {name:'Kavya',id:1},\n        {name:'Harshita',id:2},\n        {name:'Laasya',id:3},\n      ],\n      searchTerm:''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(data=>data.map(d=>{\n      switch(d.id){\n        case 1:\n        d.name = \"Kavya Kasagovni\"\n        break;\n        case 2:\n        d.name = \"Harshita Vummagoni\"\n        break;\n        case 7:\n        d.name = \"Laasya Vummagoni\"\n        break;\n        default:\n          break\n      }\n      return d;\n    }))\n    .then(users=>{console.log(users);this.setState({monsters:users})})\n  }\n  render(){\n    const {monsters,searchTerm} = this.state;\n    const filterdMonsters = monsters.filter(monster=>{\n      let pattern = \"\\\\b\"+searchTerm;\n      let regex = new RegExp(pattern,'gi');\n      return regex.test(monster.name) && monster;\n    }\n    )\n  return (\n    <div className=\"App\">\n    <Search placeholder=\"Search Monsters\"\n      handleChange={e=>{\n      this.setState({searchTerm:e.target.value},()=> console.log(this.state.searchTerm));\n     }}>\n     </Search>\n    <CardList monsters={filterdMonsters}>\n       \n    </CardList>\n     \n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}